[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"
backend-path = ["."]

[project]
name = "shelf"
version = "0.1.0"
description = "A FastAPI application for uploading, processing, and managing e-book files."
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Karolis Strazdas", email = "karolis.strazdas@protonmail.com"},
]
keywords = ["ebook", "parser", "fastapi", "api", "metadata", "digital-library"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Utilities",
]

dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "pydantic>=2.0",
    "pydantic-settings",
    "python-multipart",
    "motor>=3.0",
    "ebooklib>=0.18",
    "pymupdf",
    "celery>=5.0",
    "redis>=4.0",
    "python-dotenv>=0.19",
    "passlib[bcrypt]",
    "python-jose[cryptography]",
    "beautifulsoup4",
    "Pillow",
    "python-magic", 
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-asyncio",
    "httpx>=0.23",
]
dev = [
    "ruff",
    "pre-commit",
    "coverage",
]

[project.urls]
Homepage = "https://github.com/Eoic/Shelf"
Repository = "https://github.com/Eoic/Shelf"




[tool.setuptools]
packages = ["api", "core", "db", "models", "parsers", "services", "tests"] 

[tool.pytest.ini_options]
python_files = "test_*.py tests_*.py"
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  
    "W",  
    "F",  
    "I",  
    "C90", 
    "N",  
    "UP", 
    "B",  
    "A",  
    "SIM",
    "PTH",
    "ERA",
    "S",  
    "T20", 
    "PYI", 
    "PT", 
    "Q", 
    "COM", 
    "LOG", 
    "G", 
    "ISC", 
    "ICN", 
    "TID", 
    "ARG", 
    "DTZ", 
    "TRY", 
    "RUF", 
]
ignore = [
    "E501", 
    "B008", 
    "S101", 
    "ARG001", 
    "ARG002", 
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["api", "core", "db", "models", "parsers", "services"]
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
