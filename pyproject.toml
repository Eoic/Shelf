[build-system]
requires = ["setuptools>=61.0", "wheel"]

[project]
name = "shelf"
version = "0.1.0"
description = "A FastAPI application for uploading, processing, and managing book files."
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Karolis Strazdas", email = "karolis.strazdas@protonmail.com"},
]
keywords = ["book", "parser", "fastapi", "api", "metadata", "digital-library"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Utilities",
]

dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "pydantic>=2.0",
    "pydantic-settings",
    "python-multipart",
    "ebooklib>=0.18",
    "pymupdf",
    "celery>=5.0",
    "redis>=4.0",
    "python-dotenv>=0.19",
    "passlib[bcrypt]",
    "python-jose[cryptography]",
    "beautifulsoup4",
    "Pillow",
    "python-magic", 
    "asyncpg",
    "sqlalchemy[asyncio]",
    "databases",
    "alembic",
    "pytest",
    "httpx",
    "bs4",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-asyncio",
    "httpx>=0.23",
]
dev = [
    "ruff",
    "black",
    "isort",
    "mypy",
    "bandit",
    "pre-commit",
    "coverage",
]

[project.urls]
Homepage = "https://github.com/Eoic/Shelf"
Repository = "https://github.com/Eoic/Shelf"

[tool.setuptools]
packages = ["api", "config", "core", "database", "models", "parsers", "services"]

[tool.pytest.ini_options]
python_files = "test_*.py tests_*.py"
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  
    "W",  
    "F",  
    "I",  
    "C90", 
    "N",  
    "UP", 
    "B",  
    "A",  
    "SIM",
    "PTH",
    "ERA",
    "S",  
    "T20", 
    "PYI", 
    "PT", 
    "Q", 
    "COM", 
    "LOG", 
    "G", 
    "ISC", 
    "ICN", 
    "TID", 
    "ARG", 
    "DTZ", 
    "TRY", 
    "RUF", 
]
ignore = [
    "E501",
    "B008",
    "S101",
    "ARG001",
    "ARG002",
    "C901",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["api", "core", "database", "models", "parsers", "services", "storage"]
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["api", "core", "config", "database", "models", "parsers", "services", "storage"]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
disallow_untyped_defs = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
